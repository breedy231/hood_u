{
  "_args": [
    [
      {
        "raw": "attach-ware@https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
        "scope": null,
        "escapedName": "attach-ware",
        "name": "attach-ware",
        "rawSpec": "https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
        "spec": "https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
        "type": "remote"
      },
      "/Users/breed/repos/node_modules/mapbox-gl"
    ]
  ],
  "_from": "attach-ware@>=2.0.0 <3.0.0",
  "_id": "attach-ware@2.0.1",
  "_inCache": true,
  "_location": "/mapbox-gl/remark/unified/attach-ware",
  "_phantomChildren": {},
  "_requested": {
    "raw": "attach-ware@https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
    "scope": null,
    "escapedName": "attach-ware",
    "name": "attach-ware",
    "rawSpec": "https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
    "spec": "https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl/remark/unified"
  ],
  "_resolved": "https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
  "_shasum": "01d67a0972c750ea427cbd030d4c0399ff15125d",
  "_shrinkwrap": null,
  "_spec": "attach-ware@https://registry.npmjs.org/attach-ware/-/attach-ware-2.0.1.tgz",
  "_where": "/Users/breed/repos/node_modules/mapbox-gl",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/attach-ware/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "unherit": "^1.0.0"
  },
  "description": "Middleware with configuration",
  "devDependencies": {
    "browserify": "^13.0.0",
    "esmangle": "^1.0.0",
    "nyc": "^7.1.0",
    "remark-cli": "^1.0.0",
    "remark-comment-config": "^4.0.0",
    "remark-github": "^5.0.0",
    "remark-lint": "^4.0.0",
    "remark-validate-links": "^4.0.0",
    "tape": "^4.4.0",
    "ware": "^1.3.0",
    "xo": "^0.16.0"
  },
  "engines": {
    "node": ">=0.11.0"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/wooorm/attach-ware#readme",
  "keywords": [
    "compose",
    "connect",
    "middleware",
    "config",
    "configuration"
  ],
  "license": "MIT",
  "name": "attach-ware",
  "nyc": {
    "check-coverage": true,
    "lines": 100,
    "functions": 100,
    "branches": 100
  },
  "optionalDependencies": {},
  "readme": "# attach-ware [![Build Status][travis-badge]][travis] [![Coverage Status][codecov-badge]][codecov]\n\nMiddleware with configuration.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install attach-ware\n```\n\n## Usage\n\n`x.js`:\n\n```js\nmodule.exports = function (ctx, options) {\n    if (!options.condition) return;\n\n    return function (req, res, next) {\n        res.x = 'hello';\n        next();\n    };\n}\n```\n\n`y.js`:\n\n```js\nmodule.exports = function (ctx, options) {\n    if (!options.condition) return;\n\n    return function (req, res, next) {\n        res.y = 'world';\n        next();\n    };\n}\n```\n\n`index.js`:\n\n```js\nvar ware = require('attach-ware')(require('ware'));\nvar x = require('./x.js');\nvar y = require('./y.js');\n\nvar middleware = attachWare()\n    .use(x, {'condition': true})\n    .use(y, {'condition': false})\n    .run({}, {}, function (err, req, res) {\n        console.log(res.x); // \"hello\"\n        console.log(res.y); // undefined\n    });\n```\n\n## API\n\n### `AttachWare = attachWare(Ware)`\n\nCreate a new `AttachWare` based on the given middleware constructor.\n\n**Parameters**:\n\n*   `Ware` ([`Ware`][ware]).\n\n**Returns**: `Function`.\n\n### `AttachWare()`\n\nCreate configurable middleware.  Works just like the given\n[`Ware`][ware].\n\n### `AttachWare#use(attacher[, input...])`\n\n###### Signatures\n\n*   `attachWare.use(attacher[, input...])`;\n*   `attachWare.use(attachers[, input...])`;\n*   `attachWare.use(list)`;\n*   `attachWare.use(matrix)`.\n\n###### Parameters\n\n*   `attacher` (`Function`) — One attacher.\n*   `attachers` (`Array.<Function>`)\n    — List where each value is an `attacher`;\n*   `list` (`Array`)\n    — List where the first value is an `attacher`, and further values\n    are `input`;\n*   `matrix` (`Array`)\n    — Matrix where each entry is a `list`.\n\nInvokes `attacher` with [`context`][context] and all `input`.\n\nIf `attacher` returns another function (`fn`, which can be synchronous,\nasynchronous, or a generator function), that function is [added to the\nmiddleware][ware-use], and will be invoked when [`run()`][ware-run] is\ninvoked like normal middleware.\n\n### `AttachWare#context`\n\nThe first argument for `attach`ers. When this is falsey, the instance\nitself is used.\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[travis-badge]: https://img.shields.io/travis/wooorm/attach-ware.svg\n\n[travis]: https://travis-ci.org/wooorm/attach-ware\n\n[codecov-badge]: https://img.shields.io/codecov/c/github/wooorm/attach-ware.svg\n\n[codecov]: https://codecov.io/github/wooorm/attach-ware\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[ware]: https://github.com/segmentio/ware#ware-1\n\n[ware-use]: https://github.com/segmentio/ware#usefn\n\n[ware-run]: https://github.com/segmentio/ware#runinput-callback\n\n[context]: #attachwarecontext\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "output": true,
    "plugins": {
      "comment-config": null,
      "lint": {
        "heading-increment": false,
        "list-item-spacing": false
      },
      "github": null,
      "validate-links": null
    },
    "settings": {
      "bullet": "*"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/attach-ware.git"
  },
  "scripts": {
    "build": "npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js -s AttachWare > attach-ware.js",
    "build-mangle": "esmangle attach-ware.js > attach-ware.min.js",
    "build-md": "remark . --quiet --frail",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test",
    "test-coverage": "nyc --reporter lcov tape test.js"
  },
  "version": "2.0.1",
  "xo": {
    "space": true,
    "rules": {},
    "ignores": [
      "attach-ware.js",
      "attach-ware.min.js"
    ]
  }
}
