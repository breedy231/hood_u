{
  "_args": [
    [
      {
        "raw": "stringify-entities@https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
        "scope": null,
        "escapedName": "stringify-entities",
        "name": "stringify-entities",
        "rawSpec": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
        "spec": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
        "type": "remote"
      },
      "/Users/breed/repos/node_modules/mapbox-gl"
    ]
  ],
  "_from": "stringify-entities@>=1.0.0 <2.0.0",
  "_id": "stringify-entities@1.2.0",
  "_inCache": true,
  "_location": "/mapbox-gl/remark/stringify-entities",
  "_phantomChildren": {},
  "_requested": {
    "raw": "stringify-entities@https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
    "scope": null,
    "escapedName": "stringify-entities",
    "name": "stringify-entities",
    "rawSpec": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
    "spec": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl/remark"
  ],
  "_resolved": "https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
  "_shasum": "b53ab7fc33972cab0d7a1006a82f1318af4572e1",
  "_shrinkwrap": null,
  "_spec": "stringify-entities@https://registry.npmjs.org/stringify-entities/-/stringify-entities-1.2.0.tgz",
  "_where": "/Users/breed/repos/node_modules/mapbox-gl",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bugs": {
    "url": "https://github.com/wooorm/hast-util-to-html/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    }
  ],
  "dependencies": {
    "character-entities-html4": "^1.0.0",
    "character-entities-legacy": "^1.0.0"
  },
  "description": "Encode HTML character references and character entities",
  "devDependencies": {
    "browserify": "^13.0.0",
    "character-entities": "^1.0.0",
    "esmangle": "^1.0.0",
    "istanbul": "^0.4.0",
    "remark-cli": "^1.0.0",
    "remark-comment-config": "^4.0.0",
    "remark-github": "^5.0.0",
    "remark-lint": "^4.0.0",
    "remark-toc": "^3.0.0",
    "remark-validate-links": "^4.0.0",
    "tape": "^4.0.0",
    "xo": "^0.16.0"
  },
  "files": [
    "lib",
    "index.js"
  ],
  "homepage": "https://github.com/wooorm/stringify-entities#readme",
  "keywords": [
    "stringify",
    "encode",
    "escape",
    "html",
    "character",
    "reference",
    "entity",
    "entities"
  ],
  "license": "MIT",
  "name": "stringify-entities",
  "optionalDependencies": {},
  "readme": "# stringify-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\n<!--lint disable list-item-spacing heading-increment-->\n\nEncode HTML character references and character entities.\n\n*   [x] Very fast;\n*   [x] Just the encoding part;\n*   [x] Reliable: ``'`'`` characters are escaped to ensure no scripts\n    run in IE6-8.  Additionally, only named entities recognised by HTML4\n    are encoded, meaning the infamous `&apos;` (which people think is a\n    [virus][]) won‚Äôt show up.\n\n## Algorithm\n\nBy default, all dangerous, non-ASCII, or non-printable ASCII characters\nare encoded.  A [subset][] of characters can be given to encode just\nthose characters.  Alternatively, pass [`escapeOnly`][escapeonly] to\nescape just the dangerous characters (`\"`, `'`, `<`, `>`, `&`, `` ` ``).\nBy default, numeric entities are used.  Pass [`useNamedReferences`][named]\nto use named entities when possible, or [`useShortestReferences`][short]\nto use them if that results in less bytes.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install stringify-entities\n```\n\n**stringify-entities** is also available as an AMD, CommonJS, and globals\nmodule, [uncompressed and compressed][releases].\n\n## Usage\n\n```js\nvar stringify = require('stringify-entities');\n\nstringify('alpha ¬© bravo ‚â† charlie ùåÜ delta');\n```\n\nYields:\n\n```html\nalpha &#xA9; bravo &#x2260; charlie &#x1D306; delta\n```\n\n‚Ä¶and with `useNamedReferences: true`.\n\n```js\nstringify('alpha ¬© bravo ‚â† charlie ùåÜ delta', { useNamedReferences: true });\n```\n\nYields:\n\n```html\nalpha &copy; bravo &ne; charlie &#x1D306; delta\n```\n\n## API\n\n### `stringifyEntities(value[, options])`\n\nEncode special characters in `value`.\n\n##### `options`\n\n###### `options.escapeOnly`\n\nWhether to only escape possibly dangerous characters (`boolean`,\ndefault: `false`).  Those characters are `\"`, `'`, `<`, `>` `&`, and\n`` ` ``.\n\n###### `options.subset`\n\nWhether to only escape the given subset of characters (`Array.<string>`).\n\n###### `options.useNamedReferences`\n\nWhether to use named entities where possible (`boolean?`, default:\n`false`).\n\n###### `options.useShortestReferences`\n\nWhether to use named entities, where possible, if that results in less\nbytes (`boolean?`, default: `false`).  **Note**: `useNamedReferences`\ncan be omitted when using `useShortestReferences`.\n\n###### `options.omitOptionalSemicolons`\n\nWhether to omit semi-colons when possible. (`boolean?`, default: `false`).\n**Note**: This creates parse errors: don‚Äôt use this except when building\na minifier.\n\nOmitting semi-colons is possible for [certain][dangerous] [legacy][]\nnamed references, and numeric entities, in some cases.\n\n###### `options.attribute`\n\nOnly needed when operating dangerously with `omitOptionalSemicolons: true`.\nCreate entities which don‚Äôt fail in attributes (`boolean?`, default:\n`false`).\n\n## License\n\n[MIT][license] ¬© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/stringify-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/stringify-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/stringify-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/stringify-entities\n\n[releases]: https://github.com/wooorm/stringify-entities/releases\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[virus]: http://www.telegraph.co.uk/technology/advice/10516839/Why-do-some-apostrophes-get-replaced-with-andapos.html\n\n[dangerous]: lib/dangerous.json\n\n[legacy]: https://github.com/wooorm/character-entities-legacy\n\n[subset]: #optionssubset\n\n[escapeonly]: #optionsescapeonly\n\n[named]: #optionsusenamedreferences\n\n[short]: #optionsuseshortestreferences\n",
  "readmeFilename": "readme.md",
  "remarkConfig": {
    "output": true,
    "plugins": [
      "comment-config",
      "lint",
      "github",
      "validate-links"
    ],
    "settings": {
      "bullet": "*"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/stringify-entities.git"
  },
  "scripts": {
    "build": "npm run build-dangerous && npm run build-md && npm run build-bundle && npm run build-mangle",
    "build-bundle": "browserify index.js --bare -s stringifyEntities > stringify-entities.js",
    "build-dangerous": "node script/generate-dangerous.js",
    "build-mangle": "esmangle stringify-entities.js > stringify-entities.min.js",
    "build-md": "remark . --quiet --frail",
    "lint": "xo",
    "test": "npm run build && npm run lint && npm run test-coverage",
    "test-api": "node test.js",
    "test-coverage": "istanbul cover test.js"
  },
  "version": "1.2.0",
  "xo": {
    "space": true,
    "rules": {
      "guard-for-in": [
        0
      ],
      "eqeqeq": [
        0,
        "allow-null"
      ],
      "no-eq-null": [
        0
      ]
    },
    "ignores": [
      "stringify-entities.js",
      "stringify-entities.min.js"
    ]
  }
}
