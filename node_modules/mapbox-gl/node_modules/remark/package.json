{
  "_args": [
    [
      {
        "raw": "remark@https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
        "scope": null,
        "escapedName": "remark",
        "name": "remark",
        "rawSpec": "https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
        "spec": "https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
        "type": "remote"
      },
      "/Users/breed/repos/node_modules/mapbox-gl"
    ]
  ],
  "_from": "remark@4.2.2",
  "_id": "remark@4.2.2",
  "_inCache": true,
  "_location": "/mapbox-gl/remark",
  "_phantomChildren": {
    "unist-util-visit": "1.1.0"
  },
  "_requested": {
    "raw": "remark@https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
    "scope": null,
    "escapedName": "remark",
    "name": "remark",
    "rawSpec": "https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
    "spec": "https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/mapbox-gl/documentation",
    "/mapbox-gl/documentation/documentation-theme-default"
  ],
  "_resolved": "https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
  "_shasum": "42dc5d0b3a6a2d5443e7cbdbb2a3202854be698f",
  "_shrinkwrap": null,
  "_spec": "remark@https://registry.npmjs.org/remark/-/remark-4.2.2.tgz",
  "_where": "/Users/breed/repos/node_modules/mapbox-gl",
  "author": {
    "name": "Titus Wormer",
    "email": "tituswormer@gmail.com",
    "url": "http://wooorm.com"
  },
  "bin": {
    "remark": "bin/remark"
  },
  "bugs": {
    "url": "https://github.com/wooorm/remark/issues"
  },
  "contributors": [
    {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    {
      "name": "Eugene Sharygin",
      "email": "eush77@gmail.com"
    },
    {
      "name": "YJ Yang",
      "email": "chcokr@gmail.com"
    }
  ],
  "dependencies": {
    "camelcase": "^2.0.0",
    "ccount": "^1.0.0",
    "chalk": "^1.0.0",
    "chokidar": "^1.0.5",
    "collapse-white-space": "^1.0.0",
    "commander": "^2.0.0",
    "concat-stream": "^1.0.0",
    "debug": "^2.0.0",
    "elegant-spinner": "^1.0.0",
    "extend": "^3.0.0",
    "glob": "^7.0.0",
    "globby": "^4.0.0",
    "log-update": "^1.0.1",
    "longest-streak": "^1.0.0",
    "markdown-table": "^0.4.0",
    "minimatch": "^3.0.0",
    "npm-prefix": "^1.0.1",
    "parse-entities": "^1.0.0",
    "repeat-string": "^1.5.0",
    "stringify-entities": "^1.0.0",
    "to-vfile": "^1.0.0",
    "trim": "^0.0.1",
    "trim-trailing-lines": "^1.0.0",
    "unified": "^3.0.0",
    "unist-util-remove-position": "^1.0.0",
    "user-home": "^2.0.0",
    "vfile": "^1.1.0",
    "vfile-find-down": "^1.0.0",
    "vfile-find-up": "^1.0.0",
    "vfile-location": "^2.0.0",
    "vfile-reporter": "^1.5.0",
    "ware": "^1.3.0"
  },
  "description": "Markdown processor powered by plugins",
  "devDependencies": {
    "bail": "^1.0.0",
    "browserify": "^13.0.0",
    "clone": "^1.0.1",
    "escodegen": "^1.7.0",
    "eslint": "^2.0.0",
    "esmangle": "^1.0.0",
    "esprima": "^2.6.0",
    "istanbul": "^0.4.0",
    "jscs": "^2.0.0",
    "jscs-jsdoc": "^1.0.0",
    "mocha": "^2.0.0",
    "remark-comment-config": "^3.0.0",
    "remark-github": "^4.0.1",
    "remark-html": "^3.0.0",
    "remark-license": "^2.0.0",
    "remark-lint": "^3.0.0",
    "remark-man": "^3.0.0",
    "remark-retext": "^1.0.1",
    "remark-toc": "^3.0.0",
    "remark-usage": "^3.0.0",
    "remark-validate-links": "^3.0.0",
    "remark-yaml-config": "^3.0.0",
    "retext": "^2.0.0",
    "retext-equality": "^2.2.1",
    "retext-profanities": "^1.1.0",
    "retext-readability": "^1.0.0",
    "retext-simplify": "^1.1.0"
  },
  "directories": {
    "man": "./man"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js",
    "lib",
    "man",
    "bin"
  ],
  "homepage": "http://remark.js.org",
  "keywords": [
    "markdown",
    "markup",
    "abstract",
    "syntax",
    "tree",
    "json",
    "ast",
    "parse",
    "stringify",
    "bin",
    "cli"
  ],
  "license": "MIT",
  "man": [
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remark.1",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remark.3",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remarkconfig.7",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remarkignore.5",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remarkplugin.3",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remarkplugin.7",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remarkrc.5",
    "/var/folders/_f/zlc8jgg12x3_dc9g9fd6sp8hfm17gx/T/npm-50589-7dc8b02d/unpack-528020b6/man/remarksetting.7"
  ],
  "name": "remark",
  "optionalDependencies": {},
  "readme": "# ![remark][logo]\n\n[![Build Status][build-badge]][build-status]\n[![Coverage Status][coverage-badge]][coverage-status]\n[![Inline docs][docs-badge]][docs-status]\n[![Chat][chat-badge]][chat]\n\n> **remark** recently changed its name from **mdast**. [Read more about\n> what changed and how to migrate »][migrating]\n\n**remark** is a markdown processor powered by plugins. Lots of tests. Node,\nio.js, and the browser. 100% coverage.\n\n**remark** is not just another markdown to HTML compiler. It can generate,\nand reformat, markdown too. Powered by [plugins][] to do\nall kinds of things: [validate your markdown][remark-lint],\n[add links for GitHub references][remark-github], or\n[add a table of contents][remark-toc].\n\nThe project has both an extensive [JavaScript API][remark-3] for\nparsing, modifying, and compiling markdown, and a friendly [Command Line\nInterface][remark-1] making it easy to validate, prepare, and compile\nmarkdown in a build step.\n\n## Table of Contents\n\n*   [Installation](#installation)\n\n*   [Usage](#usage)\n\n*   [API](#api)\n\n    *   [remark.process(value\\[, options\\]\\[, done\\])](#remarkprocessvalue-options-done)\n    *   [remark.use(plugin\\[, options\\])](#remarkuseplugin-options)\n\n*   [CLI](#cli)\n\n*   [License](#license)\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install remark\n```\n\n[Read more about alternative ways to install and use »][install]\n\n## Usage\n\nLoad dependencies:\n\n```javascript\nvar remark = require('remark');\nvar html = require('remark-html');\nvar yamlConfig = require('remark-yaml-config');\n```\n\nUse plugins:\n\n```javascript\nvar processor = remark().use(yamlConfig).use(html);\n```\n\nProcess the document:\n\n```javascript\nvar doc = processor.process([\n    '---',\n    'remark:',\n    '  commonmark: true',\n    '---',\n    '',\n    '2) Some *emphasis*, **strongness**, and `code`.'\n].join('\\n'));\n```\n\nYields:\n\n```html\n<ol start=\"2\">\n<li>Some <em>emphasis</em>, <strong>strongness</strong>, and <code>code</code>.</li>\n</ol>\n```\n\n## API\n\n[**Get Started with the API** »][start-api]\n\n### `remark.process(value[, options][, done])`\n\nParse a markdown document, apply plugins to it, and compile it into\nsomething else.\n\n**Signatures**:\n\n*   `doc = remark.process(value, options?, done?)`.\n\n**Parameters**:\n\n*   `value` (`string`) — Markdown document;\n\n*   `options` (`Object`) — Settings:\n\n    *   `gfm` (`boolean`, default: `true`) — See [GitHub Flavoured Markdown](doc/remarksetting.7.md#github-flavoured-markdown);\n    *   `yaml` (`boolean`, default: `true`) — See [YAML](doc/remarksetting.7.md#yaml);\n    *   `commonmark` (`boolean`, default: `false`) — See [CommonMark](doc/remarksetting.7.md#commonmark);\n    *   `footnotes` (`boolean`, default: `false`) — See [Footnotes](doc/remarksetting.7.md#footnotes);\n    *   `pedantic` (`boolean`, default: `false`) — See [Pedantic](doc/remarksetting.7.md#pedantic);\n    *   `breaks` (`boolean`, default: `false`) — See [Breaks](doc/remarksetting.7.md#breaks);\n    *   `entities` (`boolean`, default: `false`) — See [Encoding Entities](doc/remarksetting.7.md#encoding-entities);\n    *   `setext` (`boolean`, default: `false`) — See [Setext Headings](doc/remarksetting.7.md#setext-headings);\n    *   `closeAtx` (`boolean`, default: `false`) — See [Closed ATX Headings](doc/remarksetting.7.md#closed-atx-headings);\n    *   `looseTable` (`boolean`, default: `false`) — See [Loose Tables](doc/remarksetting.7.md#loose-tables);\n    *   `spacedTable` (`boolean`, default: `true`) — See [Spaced Tables](doc/remarksetting.7.md#spaced-tables);\n    *   `fence` (`\"~\"` or ``\"`\"``, default: ``\"`\"``) — See [Fence](doc/remarksetting.7.md#fence);\n    *   `fences` (`boolean`, default: `false`) — See [Fences](doc/remarksetting.7.md#fences);\n    *   `bullet` (`\"-\"`, `\"*\"`, or `\"+\"`, default: `\"-\"`) — See [List Item Bullets](doc/remarksetting.7.md#list-item-bullets);\n    *   `listItemIndent` (`\"tab\"`, `\"mixed\"` or `\"1\"`, default: `\"tab\"`) — See [List Item Indent](doc/remarksetting.7.md#list-item-indent);\n    *   `incrementListMarker` (`boolean`, default: `true`) — See [List Marker Increase](doc/remarksetting.7.md#list-marker-increase);\n    *   `rule` (`\"-\"`, `\"*\"`, or `\"_\"`, default: `\"*\"`) — See [Horizontal Rules](doc/remarksetting.7.md#horizontal-rules);\n    *   `ruleRepetition` (`number`, default: `3`) — See [Horizontal Rules](doc/remarksetting.7.md#horizontal-rules);\n    *   `ruleSpaces` (`boolean`, default `true`) — See [Horizontal Rules](doc/remarksetting.7.md#horizontal-rules);\n    *   `strong` (`\"_\"`, or `\"*\"`, default `\"*\"`) — See [Emphasis Markers](doc/remarksetting.7.md#emphasis-markers);\n    *   `emphasis` (`\"_\"`, or `\"*\"`, default `\"_\"`) — See [Emphasis Markers](doc/remarksetting.7.md#emphasis-markers).\n    *   `position` (`boolean`, default: `true`) — See [Position](doc/remarksetting.7.md#position);\n\n*   `done` (`function(Error?, string?)`) — Callback invoked when the output\n    is generated with either an error, or a result. Only strictly needed when\n    asynchronous plugins are used.\n\nAll options (including the options object itself) can be `null` or `undefined`\nto default to their default values.\n\n**Returns**:\n\n`string` or `null`: A document. Formatted in markdown by default, or in\nwhatever a plugin generates.\nThe result is `null` if a plugin is asynchronous, in which case the callback\n`done` should’ve been passed (do not worry: plugin creators make sure you know\nits asynchronous).\n\n### `remark.use(plugin[, options])`\n\nChange the way [`remark`][api] works by using a [`plugin`][plugins].\n\n**Signatures**:\n\n*   `processor = remark.use(plugin, options?)`;\n*   `processor = remark.use(plugins)`.\n\n**Parameters**:\n\n*   `plugin` (`Function`) — A [**Plugin**][plugins];\n*   `plugins` (`Array.<Function>`) — A list of [**Plugin**][plugins]s;\n*   `options` (`Object?`) — Passed to plugin. Specified by its documentation.\n\n**Returns**:\n\n`Object`: an instance of Remark: The returned object functions just like\n**remark** (it has the same methods), but caches the `use`d plugins. This\nprovides the ability to chain `use` calls to use more than one plugin, but\nensures the functioning of the **remark** module does not change for other\ndependents.\n\n## CLI\n\n[**Get Started with the CLI** »][start-cli]\n\nInstall:\n\n```bash\nnpm install --global remark\n```\n\nUse:\n\n```text\nUsage: remark [options] <pathspec...>\n\nMarkdown processor powered by plugins\n\nOptions:\n\n  -h, --help                output usage information\n  -V, --version             output the version number\n  -o, --output [path]       specify output location\n  -c, --config-path <path>  specify configuration location\n  -i, --ignore-path <path>  specify ignore location\n  -s, --setting <settings>  specify settings\n  -u, --use <plugins>       use transform plugin(s)\n  -e, --ext <extensions>    specify extensions\n  -w, --watch               watch for changes and reprocess\n  -q, --quiet               output only warnings and errors\n  -S, --silent              output only errors\n  -f, --frail               exit with 1 on warnings\n  -t, --tree                input and output syntax tree\n  --file-path <path>        specify file path to process as\n  --tree-out                output syntax tree\n  --tree-in                 input syntax tree\n  --no-stdout               disable writing to stdout\n  --no-color                disable color in output\n  --no-rc                   disable configuration from .remarkrc\n  --no-ignore               disable ignore from .remarkignore\n\nSee also: man 1 remark, man 3 remark,\n  man 3 remarkplugin, man 5 remarkrc,\n  man 5 remarkignore, man 7 remarksetting,\n  man 7 remarkconfig, man 7 remarkplugin.\n\nExamples:\n\n  # Process `readme.md`\n  $ remark readme.md -o readme-new.md\n\n  # Pass stdin(4) through remark, with settings, to stdout(4)\n  $ remark --setting \"setext: true, bullet: \\\"*\\\"\" < readme.md > readme-new.md\n\n  # Use a plugin (with options)\n  $ npm install remark-toc\n  $ remark readme.md --use \"toc=heading:\\\"contents\\\"\" -o\n\n  # Rewrite markdown in a directory\n  $ remark . -o\n```\n\n<!-- Definitions -->\n\n[logo]: https://cdn.rawgit.com/wooorm/remark/master/logo.svg\n\n[build-badge]: https://img.shields.io/travis/wooorm/remark.svg\n\n[build-status]: https://travis-ci.org/wooorm/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/remark.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/remark\n\n[docs-badge]: https://img.shields.io/badge/docs-A-brightgreen.svg\n\n[docs-status]: http://inch-ci.org/github/wooorm/remark\n\n[chat-badge]: https://img.shields.io/gitter/room/wooorm/remark.svg\n\n[chat]: https://gitter.im/wooorm/remark\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[migrating]: https://github.com/wooorm/remark/releases/tag/3.0.0\n\n[remark-lint]: https://github.com/wooorm/remark-lint\n\n[remark-github]: https://github.com/wooorm/remark-github\n\n[remark-toc]: https://github.com/wooorm/remark-toc\n\n[remark-1]: doc/remark.1.md\n\n[remark-3]: doc/remark.3.md\n\n[plugins]: doc/plugins.md\n\n[install]: doc/installation.md\n\n[start-api]: doc/getting-started.md#application-programming-interface\n\n[start-cli]: doc/getting-started.md#command-line-interface\n\n[api]: #api\n\n## License\n\n[MIT](LICENSE) © [Titus Wormer](http://wooorm.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wooorm/remark.git"
  },
  "scripts": {
    "build": "npm run build-version && npm run build-md && npm run build-options && npm run build-man && npm run build-bundle",
    "build-bundle": "node script/build-bundle.js",
    "build-man": "bin/remark doc/*.?.md --config-path .remarkrc-man --quiet",
    "build-md": "bin/remark . --quiet --frail",
    "build-options": "node script/build-options.js",
    "build-version": "node script/build-version.js",
    "lint": "npm run lint-api && npm run lint-style",
    "lint-api": "eslint .",
    "lint-style": "jscs --reporter inline .",
    "test": "npm run build && npm run lint && npm run test-coverage && npm run test-cli",
    "test-api": "mocha --check-leaks test/index.js",
    "test-api-extensive": "TEST_EXTENDED=true npm run test-api",
    "test-cli": "bash test/cli.sh",
    "test-coverage": "istanbul cover _mocha -- -- test/index.js",
    "test-travis": "npm run build-md && npm run build-bundle && npm run lint && npm run test-coverage && npm run test-cli"
  },
  "version": "4.2.2"
}
